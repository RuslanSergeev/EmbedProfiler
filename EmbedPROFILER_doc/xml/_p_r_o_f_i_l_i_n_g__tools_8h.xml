<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.6.1">
  <compounddef id="_p_r_o_f_i_l_i_n_g__tools_8h" kind="file">
    <compoundname>PROFILING_tools.h</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">time.h</includes>
    <includedby refid="profiler__example_8cpp" local="yes">profiler_example.cpp</includedby>
    <includedby refid="_p_r_o_f_i_l_i_n_g__tools_8c" local="yes">PROFILING_tools.c</includedby>
    <incdepgraph>
      <node id="27">
        <label>stdint.h</label>
      </node>
      <node id="28">
        <label>time.h</label>
      </node>
      <node id="25">
        <label>PROFILING_tools.h</label>
        <link refid="PROFILING_tools.h"/>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="31">
        <label>PROFILING_tools.c</label>
        <link refid="_p_r_o_f_i_l_i_n_g__tools_8c"/>
      </node>
      <node id="29">
        <label>PROFILING_tools.h</label>
        <link refid="PROFILING_tools.h"/>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
      </node>
      <node id="30">
        <label>profiler_example.cpp</label>
        <link refid="profiler__example_8cpp_source"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" prot="public" static="no">
        <name>PROFILER_TOTAL_PROFILERS</name>
        <initializer>1024</initializer>
        <briefdescription>
<para>Максимальное число работающих профилировщиков времени вызова. </para>        </briefdescription>
        <detaileddescription>
<para>Это число определяет размеры массивов для хранения указателей на названия функций, имена файлов, номера строк и число вызовов. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="67" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a39949f1889adb640b9d00c1e794e4038" prot="public" static="no">
        <name>PROFILER_GLOBAL_PROFILE_INDEX</name>
        <initializer>0</initializer>
        <briefdescription>
<para>Индекс &quot;глобального профиллировщика&quot; - начального и главного профилировщика времени вызовов. </para>        </briefdescription>
        <detaileddescription>
<para>Этот профилировщик должен быть вызван в начале работы с системой профилирования времени вызовов. Измеренное глобальным профилировщиком время будет считаться временем работы системы. Проценты потреблённого времени, рассчитанные остальными профилировщиками представляют собой отношение времени работы конкретного профилировщика к времени работы глобального профилировщика: <formula id="1">\[ average[i] = \frac{PROFILER\_total\_times[i]}{PROFILER\_total\_times[0]} \]</formula> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="85" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a27d5c6f98201a8f99357c6a5c4b82e66" prot="public" static="no">
        <name>PROFILER_LOCAL_PROFILES_BEGIN</name>
        <initializer>((<ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a39949f1889adb640b9d00c1e794e4038" kindref="member">PROFILER_GLOBAL_PROFILE_INDEX</ref>)+1)</initializer>
        <briefdescription>
<para>Начальный индекс локальных профилировщиков. </para>        </briefdescription>
        <detaileddescription>
<para>С данного индекса будут следовать локальные профилировщики - замеряющие время выполнения конкретного локального вызова. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="95" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_r_o_f_i_l_i_n_g__tools_8h_1adfa1dd598814dd5a5c73276c47cba92d" prot="public" static="no">
        <name>PROFILER_INSTANCE_NOT_INITIALIZED</name>
        <initializer>-1</initializer>
        <briefdescription>
<para>Определяет неинициализированный индекс. </para>        </briefdescription>
        <detaileddescription>
<para>Используется для определения того является ли данный профилировщик инициализированным или он был вызван впервые и его ещё необходимо инициализировать. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="104" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a632f3afa2c72dd938e2a5d7e9c1e202e" prot="public" static="no">
        <name>PROFILER_local_start</name>
        <param></param>
        <initializer>{\
		static int32_t PROFILER_instance_index = <ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1adfa1dd598814dd5a5c73276c47cba92d" kindref="member">PROFILER_INSTANCE_NOT_INITIALIZED</ref>;\
		<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref> PROFILER_begin_time, PROFILER_end_time;\
		if(<ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1acf37348ac7f1743ce5ccb80ac04c4944" kindref="member">PROFILER_instance_is_not_initialized</ref>(PROFILER_instance_index)){\
            PROFILER_instance_index = <ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a279e6b70c0935894ab8b2f3c2db2cf78" kindref="member">PROFILER_get_free_instance_index</ref>();\
            <ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1ab98613156719567b3aab5f675c195f92" kindref="member">PROFILER_instance_init</ref>(__FILE__, __FUNCTION__, __LINE__, PROFILER_instance_index);\
		}\
        <ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a2629430c71701c51e4c8897a61cd0edb" kindref="member">PROFILER_refresh_times_called</ref>(PROFILER_instance_index);\
        <ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga106b837099d8b52043148fa42592608b" kindref="member">PROFILER_get_current_time</ref>(&amp;PROFILER_begin_time);</initializer>
        <briefdescription>
<para>Начинает/продолжает профилировку секции исходного кода. </para>        </briefdescription>
        <detaileddescription>
<para>Если профилировщик начинает работу впервые, то происходит запись текущего местоположения в соответствующие массивы. Запоминается текущее время. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="213" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="_p_r_o_f_i_l_i_n_g__tools_8h_1ad8354a6502e89adea8535f4029a15b5f" prot="public" static="no">
        <name>PROFILER_local_stop</name>
        <param></param>
        <initializer><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga106b837099d8b52043148fa42592608b" kindref="member">PROFILER_get_current_time</ref>(&amp;PROFILER_end_time);\
            <ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga0072e0d84e203ad6499be54f4b6e14ee" kindref="member">PROFILER_refresh_time_consumed</ref>(PROFILER_begin_time, PROFILER_end_time, PROFILER_instance_index);\
    }</initializer>
        <briefdescription>
<para>Окончание работы/вызова локального профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Запоминается время окончания работы/вызова профилировщика. Это время, как и время начала работы/вызова профилировщика используется для обновления общего затраченного времени. Общее затраченное профилировщиком время используется системой профилировки для оценки загруженности профилируемой секции кода. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="228" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga425fb9e92c3523ab2a3581d2cbefb5ce" prot="public" static="no">
        <name>PROFILER_global_stop</name>
        <param></param>
        <initializer><ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1ad8354a6502e89adea8535f4029a15b5f" kindref="member">PROFILER_local_stop</ref>()</initializer>
        <briefdescription>
<para>Окончание работы глобального профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Запоминается время окончания работы системы профилирования. Которое используется в дальнейшем для расчёта времени работы системы профилирования.Добавлено в портируемый раздел, поскольку завершение работы профилировщика может быть платформо-зависимой. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="256" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="256" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" prot="public" static="no">
        <type>struct timespec</type>
        <definition>PROFILER_timestruct</definition>
        <argsstring></argsstring>
        <name>PROFILER_timestruct</name>
        <briefdescription>
<para>Тип переменной для хранения измерений времени. </para>        </briefdescription>
        <detaileddescription>
<para>Для оптимальной работы не рекомендуется хранение времени в целочисленных типах. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="58" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="58" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1ab45d681232a34daa38cb1419306a1bf2" prot="public" static="no" mutable="no">
        <type>int32_t</type>
        <definition>int32_t PROFILER_instance_last_index</definition>
        <argsstring></argsstring>
        <name>PROFILER_instance_last_index</name>
        <briefdescription>
<para>Индекс последнего инициализированного профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Инициализирован значением PROFILER_INSTANCE_NOT_INITIALIZED, поскольку в начальный момент ни один профилировщик ещё не инициализирован. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="106" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a0248163891f760fab2d9dacb50cc619f" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* PROFILER_files_names[PROFILER_TOTAL_PROFILERS]</definition>
        <argsstring>[PROFILER_TOTAL_PROFILERS]</argsstring>
        <name>PROFILER_files_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="107" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a45fffccf71b38481f5e095daf56de466" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* PROFILER_procedures_names[PROFILER_TOTAL_PROFILERS]</definition>
        <argsstring>[PROFILER_TOTAL_PROFILERS]</argsstring>
        <name>PROFILER_procedures_names</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="108" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1afebf7705a885e5a8f0e2e0e51f77e04a" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t PROFILER_lines_numbers[PROFILER_TOTAL_PROFILERS]</definition>
        <argsstring>[PROFILER_TOTAL_PROFILERS]</argsstring>
        <name>PROFILER_lines_numbers</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="109" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a9f472cfb52fb98b33b6ca7792d803d25" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t PROFILER_times_called[PROFILER_TOTAL_PROFILERS]</definition>
        <argsstring>[PROFILER_TOTAL_PROFILERS]</argsstring>
        <name>PROFILER_times_called</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="110" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="61" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a7a0dd61f5e00f85f4912351152587d33" prot="public" static="no" mutable="no">
        <type><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref></type>
        <definition>PROFILER_timestruct PROFILER_total_times[PROFILER_TOTAL_PROFILERS]</definition>
        <argsstring>[PROFILER_TOTAL_PROFILERS]</argsstring>
        <name>PROFILER_total_times</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="111" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a43db4527124e67e24e5538824fffcf3e" prot="public" static="no" mutable="no">
        <type><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref></type>
        <definition>PROFILER_timestruct PROFILER_end_time</definition>
        <argsstring></argsstring>
        <name>PROFILER_end_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="114" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a41f5f052e15efcd2d5870b3448fd3cdc" prot="public" static="no" mutable="no">
        <type><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref> int32_t</type>
        <definition>static const char const int32_t const int32_t PROFILER_instance_index</definition>
        <argsstring></argsstring>
        <name>PROFILER_instance_index</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="114" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="114" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1afa24a6ca95b4977cec3238001927aa22" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* function</definition>
        <argsstring></argsstring>
        <name>function</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="126" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a031ee87097dac866c201d226e02a629c" prot="public" static="no" mutable="no">
        <type>const char const int32_t</type>
        <definition>const char const int32_t line</definition>
        <argsstring></argsstring>
        <name>line</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="126" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="126" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a4114e96da13fc00d62fc2f0ab301e996" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>static</type>
        <definition>static __attribute__</definition>
        <argsstring>((always_inline)) void PROFILER_refresh_time_consumed(PROFILER_timestruct PROFILER_begin_time</argsstring>
        <name>__attribute__</name>
        <param>
          <type>(always_inline)</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga2f57ecff908155818a48144e366f7c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PROFILER_log</definition>
        <argsstring>()</argsstring>
        <name>PROFILER_log</name>
        <briefdescription>
<para>Вывести отчёт о работе профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Сообщает затраченное на работу каждого профилировщика время, имена файлов, номера строк, названия функций где был создан данный профилировщик. Также сообщает число вызовов данного профилировщика. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="143" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.c" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga106b837099d8b52043148fa42592608b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>PROFILER_get_current_time</definition>
        <argsstring>(PROFILER_timestruct *PROFILER_timestruct_instance)</argsstring>
        <name>PROFILER_get_current_time</name>
        <param>
          <type><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref> *</type>
          <declname>PROFILER_timestruct_instance</declname>
        </param>
        <briefdescription>
<para>Получить текущее время в системе. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="out">PROFILER_timestruct</parametername>
</parameternamelist>
<parameterdescription>
<para>*PROFILER_timestruct_instance <linebreak/>
 Указатель на структуру, в которой будет сохранено системное время. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="151" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga0072e0d84e203ad6499be54f4b6e14ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PROFILER_refresh_time_consumed</definition>
        <argsstring>(PROFILER_timestruct PROFILER_begin_time, PROFILER_timestruct PROFILER_end_time, int32_t PROFILER_instance_index)</argsstring>
        <name>PROFILER_refresh_time_consumed</name>
        <param>
          <type><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref></type>
          <declname>PROFILER_begin_time</declname>
        </param>
        <param>
          <type><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member">PROFILER_timestruct</ref></type>
          <declname>PROFILER_end_time</declname>
        </param>
        <param>
          <type>int32_t</type>
          <declname>PROFILER_instance_index</declname>
        </param>
        <briefdescription>
<para>Обновить общее время затраченное на работу указанного профилировщика за все его вызовы. </para>        </briefdescription>
        <detaileddescription>
<para>Добавляет время потраченное указанным профилировщиком за последний вызов к общему времени за все вызовы, затраченному указанным профилировщиком. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">PROFILER_timestruct</parametername>
</parameternamelist>
<parameterdescription>
<para>PROFILER_begin_time <linebreak/>
 Время начала работы (очередного вызова) локального профилировщика. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">PROFILER_timestruct</parametername>
</parameternamelist>
<parameterdescription>
<para>PROFILER_end_time <linebreak/>
 Время окончания работы (очередного завершения) локального профилировщика. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">int32_t</parametername>
</parameternamelist>
<parameterdescription>
<para>PROFILER_instance_index <linebreak/>
 Индекс локального профилировщика. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="169" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="169" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a2629430c71701c51e4c8897a61cd0edb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PROFILER_refresh_times_called</definition>
        <argsstring>(int32_t PROFILER_instance_index)</argsstring>
        <name>PROFILER_refresh_times_called</name>
        <param>
          <type>int32_t</type>
          <declname>PROFILER_instance_index</declname>
        </param>
        <briefdescription>
<para>Обновить общее число вызовов данного профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Общее число вызовов профилировщика даёт понять, сколько раз управление достигло секции, которую профилирует данный профилировщик. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">int32_t</parametername>
</parameternamelist>
<parameterdescription>
<para>PROFILER_instance_index <linebreak/>
 Индекс локального профилировщика. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="192" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="_p_r_o_f_i_l_i_n_g__tools_8h_1a279e6b70c0935894ab8b2f3c2db2cf78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int32_t</type>
        <definition>int32_t PROFILER_get_free_instance_index</definition>
        <argsstring>()</argsstring>
        <name>PROFILER_get_free_instance_index</name>
        <briefdescription>
<para>Определяет индекс следующего свободного профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Когда профилировщик начинает свою работу впервые, система присваивает ему некоторый индекс, посредством которого с профилировщиком в дальнейшем выполняются все остальные манипуляции. <simplesect kind="return"><para>int32_t индекс следующего свободного профилировщика </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="271" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="271" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="_p_r_o_f_i_l_i_n_g__tools_8h_1ab98613156719567b3aab5f675c195f92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PROFILER_instance_init</definition>
        <argsstring>(const char *file, const char *function, const int32_t line, const int32_t PROFILER_instance_index)</argsstring>
        <name>PROFILER_instance_init</name>
        <param>
          <type>const char *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>function</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>line</declname>
        </param>
        <param>
          <type>const int32_t</type>
          <declname>PROFILER_instance_index</declname>
        </param>
        <briefdescription>
<para>Инициализирует экземпляр профилировщика. </para>        </briefdescription>
        <detaileddescription>
<para>Когда профилировщик начинает свою работу впервые, система профилировки запоминает его положение в исходном коде. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *file <linebreak/>
 Название файла, в котором работает профилировщик. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">const</parametername>
</parameternamelist>
<parameterdescription>
<para>char *function <linebreak/>
 Название функции, в которой работает профилировщик. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">const</parametername>
</parameternamelist>
<parameterdescription>
<para>int32_t line <linebreak/>
 Номер строки, в которой начинается выполнение профилировщика. Профилировщик измеряет время выполнения сегмента кода от этой строки до вызова PROFILIER_local_stop() </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">const</parametername>
</parameternamelist>
<parameterdescription>
<para>int32_t PROFILER_instance_index <linebreak/>
 Индекс инициализируемого профилировщика. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="297" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="297" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="_p_r_o_f_i_l_i_n_g__tools_8h_1acf37348ac7f1743ce5ccb80ac04c4944" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t PROFILER_instance_is_not_initialized</definition>
        <argsstring>(int32_t PROFILER_instance_index)</argsstring>
        <name>PROFILER_instance_is_not_initialized</name>
        <param>
          <type>int32_t</type>
          <declname>PROFILER_instance_index</declname>
        </param>
        <briefdescription>
<para>Сообщает инициализирован ли профилировщик или нет. </para>        </briefdescription>
        <detaileddescription>
<para>Возвращает 0, если профилировщик ещё не инициализирован (работает впервые). Возвращает значение отличное от 0, если профилировщик уже не нуждается в инициализации (работает не в первые). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">int32_t</parametername>
</parameternamelist>
<parameterdescription>
<para>PROFILER_instance_index <linebreak/>
 Индекс профилировщика. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" line="314" bodyfile="/home/ruslan/EmbedPROFILER/PROFILING_tools.h" bodystart="314" bodyend="316"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Файл <ref refid="_p_r_o_f_i_l_i_n_g__tools_8h" kindref="compound">PROFILING_tools.h</ref> является частью библиотеки EmbedPROFILER - библиотеки профилировщика времени вызовов. Профилировщик времени вызовов - средство анализа исходного кода программ, представляющее программистам и инженерам анализировать время, затраченное на выполнение того или иного участка кода в процентном соотношении (относительно общего времени работы профилировщика). </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Sergeev Ruslan. OOO SPUTNIX, MIPT High-Precision Attitude Control Systems Laboratory </para></simplesect>
<simplesect kind="version"><para>V1.0.0 </para></simplesect>
<simplesect kind="date"><para>23-January-2016 </para></simplesect>
<simplesect kind="attention"><para>THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME. AS A RESULT, OOO SPUTNIX, MIPT High-Precision Attitude Control Systems Laboratory SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.</para></simplesect>
<heading level="2"><center><copy/> COPYRIGHT 2016 RUSLAN SERGEEV</center></heading>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="28"><highlight class="preprocessor">#ifndef<sp/>PROFILING_TOOLS_H</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PROFILING_TOOLS_H</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timespec<sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="67" refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" refkind="member"><highlight class="preprocessor">#define<sp/>PROFILER_TOTAL_PROFILERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1024</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="85" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a39949f1889adb640b9d00c1e794e4038" refkind="member"><highlight class="preprocessor">#define<sp/>PROFILER_GLOBAL_PROFILE_INDEX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a27d5c6f98201a8f99357c6a5c4b82e66" refkind="member"><highlight class="preprocessor">#define<sp/>PROFILER_LOCAL_PROFILES_BEGIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((PROFILER_GLOBAL_PROFILE_INDEX)+1)</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="104" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1adfa1dd598814dd5a5c73276c47cba92d" refkind="member"><highlight class="preprocessor">#define<sp/>PROFILER_INSTANCE_NOT_INITIALIZED<sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="_p_r_o_f_i_l_i_n_g__tools_8c_1ab45d681232a34daa38cb1419306a1bf2" kindref="member" tooltip="Индекс последнего инициализированного профилировщика.">PROFILER_instance_last_index</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>PROFILER_files_names[<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" kindref="member" tooltip="Максимальное число работающих профилировщиков времени вызова.">PROFILER_TOTAL_PROFILERS</ref>];</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>PROFILER_procedures_names[<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" kindref="member" tooltip="Максимальное число работающих профилировщиков времени вызова.">PROFILER_TOTAL_PROFILERS</ref>];</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>PROFILER_lines_numbers[<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" kindref="member" tooltip="Максимальное число работающих профилировщиков времени вызова.">PROFILER_TOTAL_PROFILERS</ref>];</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>uint32_t<sp/>PROFILER_times_called[<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" kindref="member" tooltip="Максимальное число работающих профилировщиков времени вызова.">PROFILER_TOTAL_PROFILERS</ref>];</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>PROFILER_total_times[<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga775939d541e95ea75e6e7066a1cc6bcb" kindref="member" tooltip="Максимальное число работающих профилировщиков времени вызова.">PROFILER_TOTAL_PROFILERS</ref>];</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>__attribute__((always_inline))</highlight></codeline>
<codeline lineno="114"><highlight class="normal">void<sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga0072e0d84e203ad6499be54f4b6e14ee" kindref="member" tooltip="Обновить общее время затраченное на работу указанного профилировщика за все его вызовы.">PROFILER_refresh_time_consumed</ref>(<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>PROFILER_begin_time,<sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>PROFILER_end_time,<sp/>int32_t<sp/>PROFILER_instance_index);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal">static<sp/>inline<sp/>__attribute__((always_inline))</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga106b837099d8b52043148fa42592608b" kindref="member" tooltip="Получить текущее время в системе.">PROFILER_get_current_time</ref>(<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>*PROFILER_timestruct_instance);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">static<sp/>inline<sp/>__attribute__((always_inline))</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a2629430c71701c51e4c8897a61cd0edb" kindref="member" tooltip="Обновить общее число вызовов данного профилировщика.">PROFILER_refresh_times_called</ref>(int32_t<sp/>PROFILER_instance_index);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal">static<sp/>inline<sp/>__attribute__((always_inline))</highlight></codeline>
<codeline lineno="123"><highlight class="normal">int32_t<sp/><ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a279e6b70c0935894ab8b2f3c2db2cf78" kindref="member" tooltip="Определяет индекс следующего свободного профилировщика.">PROFILER_get_free_instance_index</ref>();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">static<sp/>inline<sp/>__attribute__((always_inline))</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1ab98613156719567b3aab5f675c195f92" kindref="member" tooltip="Инициализирует экземпляр профилировщика.">PROFILER_instance_init</ref>(const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*file,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*function,<sp/>const<sp/>int32_t<sp/>line,<sp/>const<sp/>int32_t<sp/>PROFILER_instance_index);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">static<sp/>inline<sp/>__attribute__((always_inline))</highlight></codeline>
<codeline lineno="129"><highlight class="normal">uint8_t<sp/><ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1acf37348ac7f1743ce5ccb80ac04c4944" kindref="member" tooltip="Сообщает инициализирован ли профилировщик или нет.">PROFILER_instance_is_not_initialized</ref>(int32_t<sp/>PROFILER_instance_index);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga2f57ecff908155818a48144e366f7c57" kindref="member" tooltip="Вывести отчёт о работе профилировщика.">PROFILER_log</ref>();</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga106b837099d8b52043148fa42592608b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga106b837099d8b52043148fa42592608b" kindref="member" tooltip="Получить текущее время в системе.">PROFILER_get_current_time</ref>(<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>*PROFILER_timestruct_instance){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clock_gettime(CLOCK_PROCESS_CPUTIME_ID,PROFILER_timestruct_instance);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga0072e0d84e203ad6499be54f4b6e14ee" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga0072e0d84e203ad6499be54f4b6e14ee" kindref="member" tooltip="Обновить общее время затраченное на работу указанного профилировщика за все его вызовы.">PROFILER_refresh_time_consumed</ref>(<ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>PROFILER_begin_time,<sp/><ref refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1gae02193769f3b21a09fc0d5035e566a75" kindref="member" tooltip="Тип переменной для хранения измерений времени.">PROFILER_timestruct</ref><sp/>PROFILER_end_time,<sp/>int32_t<sp/>PROFILER_instance_index){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int32_t<sp/>PROFILER_seconds_summed<sp/>=<sp/>(PROFILER_total_times[PROFILER_instance_index].tv_nsec)/1000000000;\</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>PROFILER_total_times[PROFILER_instance_index].tv_sec<sp/>+=\</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_end_time.tv_sec<sp/>-<sp/>PROFILER_begin_time.tv_sec<sp/>+<sp/>PROFILER_seconds_summed;\</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>PROFILER_total_times[PROFILER_instance_index].tv_nsec<sp/>=\</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_total_times[PROFILER_instance_index].tv_nsec-1000000000*PROFILER_seconds_summed<sp/>+\</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PROFILER_end_time.tv_nsec<sp/>-<sp/>PROFILER_begin_time.tv_nsec);\</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a2629430c71701c51e4c8897a61cd0edb" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a2629430c71701c51e4c8897a61cd0edb" kindref="member" tooltip="Обновить общее число вызовов данного профилировщика.">PROFILER_refresh_times_called</ref>(int32_t<sp/>PROFILER_instance_index){</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>PROFILER_times_called[PROFILER_instance_index]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="204" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a632f3afa2c72dd938e2a5d7e9c1e202e" refkind="member"><highlight class="preprocessor">#define<sp/>PROFILER_local_start()\</highlight></codeline>
<codeline lineno="205"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{\</highlight></codeline>
<codeline lineno="206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>int32_t<sp/>PROFILER_instance_index<sp/>=<sp/>PROFILER_INSTANCE_NOT_INITIALIZED;\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_timestruct<sp/>PROFILER_begin_time,<sp/>PROFILER_end_time;\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(PROFILER_instance_is_not_initialized(PROFILER_instance_index)){\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_instance_index<sp/>=<sp/>PROFILER_get_free_instance_index();\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_instance_init(__FILE__,<sp/>__FUNCTION__,<sp/>__LINE__,<sp/>PROFILER_instance_index);\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_refresh_times_called(PROFILER_instance_index);\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_get_current_time(&amp;PROFILER_begin_time);</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="225" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1ad8354a6502e89adea8535f4029a15b5f" refkind="member"><highlight class="preprocessor">#define<sp/>PROFILER_local_stop()\</highlight></codeline>
<codeline lineno="226"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_get_current_time(&amp;PROFILER_end_time);\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROFILER_refresh_time_consumed(PROFILER_begin_time,<sp/>PROFILER_end_time,<sp/>PROFILER_instance_index);\</highlight></codeline>
<codeline lineno="228"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="256" refid="group___xD0_x9F_xD0_xBE_xD1_x80_xD1_x82_xD0_xB8_xD1_x80_xD1_x83_xD0_xB5_xD0_xBC_xD0_xB0_xD1_x8F_2ef1b31e26d7139e4bfe94879d1322e3_1ga425fb9e92c3523ab2a3581d2cbefb5ce" refkind="member"></codeline>
<codeline lineno="271" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1a279e6b70c0935894ab8b2f3c2db2cf78" refkind="member"></codeline>
<codeline lineno="297" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1ab98613156719567b3aab5f675c195f92" refkind="member"></codeline>
<codeline lineno="314" refid="_p_r_o_f_i_l_i_n_g__tools_8h_1acf37348ac7f1743ce5ccb80ac04c4944" refkind="member"></codeline>
    </programlisting>
    <location file="/home/ruslan/EmbedPROFILER/PROFILING_tools.h"/>
  </compounddef>
</doxygen>
