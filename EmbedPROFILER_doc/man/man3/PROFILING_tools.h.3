.TH "PROFILING_tools.h" 3 "Вт 26 Янв 2016" "Version текущая версия: 1.0" "EmbedPROFILER" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PROFILING_tools.h \- 
.PP
Файл \fBPROFILING_tools\&.h\fP является частью библиотеки EmbedPROFILER - библиотеки профилировщика времени вызовов\&. Профилировщик времени вызовов - средство анализа исходного кода программ, представляющее программистам и инженерам анализировать время, затраченное на выполнение того или иного участка кода в процентном соотношении (относительно общего времени работы профилировщика)\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdint\&.h>\fP
.br
\fC#include <time\&.h>\fP
.br

.SS "Макросы"

.in +1c
.ti -1c
.RI "#define \fBPROFILER_TOTAL_PROFILERS\fP   1024"
.br
.RI "\fIМаксимальное число работающих профилировщиков времени вызова\&. \fP"
.ti -1c
.RI "#define \fBPROFILER_GLOBAL_PROFILE_INDEX\fP   0"
.br
.RI "\fIИндекс 'глобального профиллировщика' - начального и главного профилировщика времени вызовов\&. \fP"
.ti -1c
.RI "#define \fBPROFILER_LOCAL_PROFILES_BEGIN\fP   ((\fBPROFILER_GLOBAL_PROFILE_INDEX\fP)+1)"
.br
.RI "\fIНачальный индекс локальных профилировщиков\&. \fP"
.ti -1c
.RI "#define \fBPROFILER_INSTANCE_NOT_INITIALIZED\fP   -1"
.br
.RI "\fIОпределяет неинициализированный индекс\&. \fP"
.ti -1c
.RI "#define \fBPROFILER_local_start\fP()"
.br
.RI "\fIНачинает/продолжает профилировку секции исходного кода\&. \fP"
.ti -1c
.RI "#define \fBPROFILER_local_stop\fP()"
.br
.RI "\fIОкончание работы/вызова локального профилировщика\&. \fP"
.ti -1c
.RI "#define \fBPROFILER_global_stop\fP()   \fBPROFILER_local_stop\fP()"
.br
.RI "\fIОкончание работы глобального профилировщика\&. \fP"
.in -1c
.SS "Определения типов"

.in +1c
.ti -1c
.RI "typedef struct timespec \fBPROFILER_timestruct\fP"
.br
.RI "\fIТип переменной для хранения измерений времени\&. \fP"
.in -1c
.SS "Функции"

.in +1c
.ti -1c
.RI "void \fBPROFILER_log\fP ()"
.br
.RI "\fIВывести отчёт о работе профилировщика\&. \fP"
.ti -1c
.RI "void \fBPROFILER_get_current_time\fP (\fBPROFILER_timestruct\fP *PROFILER_timestruct_instance)"
.br
.RI "\fIПолучить текущее время в системе\&. \fP"
.ti -1c
.RI "void \fBPROFILER_refresh_time_consumed\fP (\fBPROFILER_timestruct\fP PROFILER_begin_time, \fBPROFILER_timestruct\fP PROFILER_end_time, int32_t PROFILER_instance_index)"
.br
.RI "\fIОбновить общее время затраченное на работу указанного профилировщика за все его вызовы\&. \fP"
.ti -1c
.RI "void \fBPROFILER_refresh_times_called\fP (int32_t PROFILER_instance_index)"
.br
.RI "\fIОбновить общее число вызовов данного профилировщика\&. \fP"
.ti -1c
.RI "int32_t \fBPROFILER_get_free_instance_index\fP ()"
.br
.RI "\fIОпределяет индекс следующего свободного профилировщика\&. \fP"
.ti -1c
.RI "void \fBPROFILER_instance_init\fP (const char *file, const char *function, const int32_t line, const int32_t PROFILER_instance_index)"
.br
.RI "\fIИнициализирует экземпляр профилировщика\&. \fP"
.ti -1c
.RI "uint8_t \fBPROFILER_instance_is_not_initialized\fP (int32_t PROFILER_instance_index)"
.br
.RI "\fIСообщает инициализирован ли профилировщик или нет\&. \fP"
.in -1c
.SS "Переменные"

.in +1c
.ti -1c
.RI "int32_t \fBPROFILER_instance_last_index\fP"
.br
.RI "\fIИндекс последнего инициализированного профилировщика\&. \fP"
.ti -1c
.RI "const char * \fBPROFILER_files_names\fP [\fBPROFILER_TOTAL_PROFILERS\fP]"
.br
.ti -1c
.RI "const char * \fBPROFILER_procedures_names\fP [\fBPROFILER_TOTAL_PROFILERS\fP]"
.br
.ti -1c
.RI "uint32_t \fBPROFILER_lines_numbers\fP [\fBPROFILER_TOTAL_PROFILERS\fP]"
.br
.ti -1c
.RI "uint32_t \fBPROFILER_times_called\fP [\fBPROFILER_TOTAL_PROFILERS\fP]"
.br
.ti -1c
.RI "\fBPROFILER_timestruct\fP \fBPROFILER_total_times\fP [\fBPROFILER_TOTAL_PROFILERS\fP]"
.br
.ti -1c
.RI "static \fBPROFILER_timestruct\fP \fBPROFILER_end_time\fP"
.br
.ti -1c
.RI "static \fBPROFILER_timestruct\fP int32_t \fBPROFILER_instance_index\fP"
.br
.ti -1c
.RI "static const char * \fBfunction\fP"
.br
.ti -1c
.RI "static const char const int32_t \fBline\fP"
.br
.in -1c
.SH "Подробное описание"
.PP 
Файл \fBPROFILING_tools\&.h\fP является частью библиотеки EmbedPROFILER - библиотеки профилировщика времени вызовов\&. Профилировщик времени вызовов - средство анализа исходного кода программ, представляющее программистам и инженерам анализировать время, затраченное на выполнение того или иного участка кода в процентном соотношении (относительно общего времени работы профилировщика)\&. 

\fBАвтор:\fP
.RS 4
Sergeev Ruslan\&. OOO SPUTNIX, MIPT High-Precision Attitude Control Systems Laboratory 
.RE
.PP
\fBВерсия:\fP
.RS 4
V1\&.0\&.0 
.RE
.PP
\fBДата:\fP
.RS 4
23-January-2016 
.RE
.PP
\fBВнимание:\fP
.RS 4
THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME\&. AS A RESULT, OOO SPUTNIX, MIPT High-Precision Attitude Control Systems Laboratory SHALL NOT BE HELD LIABLE FOR ANY DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS\&.
.RE
.PP
.SS "(C) COPYRIGHT 2016 RUSLAN SERGEEV"

.PP
См\&. определение в файле \fBPROFILING_tools\&.h\fP
.SH "Макросы"
.PP 
.SS "#define \fBPROFILER_GLOBAL_PROFILE_INDEX\fP   0"
.PP
Индекс 'глобального профиллировщика' - начального и главного профилировщика времени вызовов\&. Этот профилировщик должен быть вызван в начале работы с системой профилирования времени вызовов\&. Измеренное глобальным профилировщиком время будет считаться временем работы системы\&. Проценты потреблённого времени, рассчитанные остальными профилировщиками представляют собой отношение времени работы конкретного профилировщика к времени работы глобального профилировщика: \[ average[i] = \frac{PROFILER\_total\_times[i]}{PROFILER\_total\_times[0]} \] 
.PP
См\&. определение в файле PROFILING_tools\&.h строка 85
.SS "#define \fBPROFILER_INSTANCE_NOT_INITIALIZED\fP   -1"
.PP
Определяет неинициализированный индекс\&. Используется для определения того является ли данный профилировщик инициализированным или он был вызван впервые и его ещё необходимо инициализировать\&. 
.PP
См\&. определение в файле PROFILING_tools\&.h строка 104
.SS "#define \fBPROFILER_LOCAL_PROFILES_BEGIN\fP   ((\fBPROFILER_GLOBAL_PROFILE_INDEX\fP)+1)"
.PP
Начальный индекс локальных профилировщиков\&. С данного индекса будут следовать локальные профилировщики - замеряющие время выполнения конкретного локального вызова\&. 
.PP
См\&. определение в файле PROFILING_tools\&.h строка 95
.SS "#define \fBPROFILER_local_start\fP()"\fBМакроопределение:\fP
.PP
.nf
{\
                static int32_t PROFILER_instance_index = PROFILER_INSTANCE_NOT_INITIALIZED;\
                PROFILER_timestruct PROFILER_begin_time, PROFILER_end_time;\
                if(PROFILER_instance_is_not_initialized(PROFILER_instance_index)){\
            PROFILER_instance_index = PROFILER_get_free_instance_index();\
            PROFILER_instance_init(__FILE__, __FUNCTION__, __LINE__, PROFILER_instance_index);\
                }\
        PROFILER_refresh_times_called(PROFILER_instance_index);\
        PROFILER_get_current_time(&PROFILER_begin_time);
.fi
.PP
Начинает/продолжает профилировку секции исходного кода\&. Если профилировщик начинает работу впервые, то происходит запись текущего местоположения в соответствующие массивы\&. Запоминается текущее время\&. 
.PP
См\&. определение в файле PROFILING_tools\&.h строка 204
.SS "#define \fBPROFILER_local_stop\fP()"\fBМакроопределение:\fP
.PP
.nf
PROFILER_get_current_time(&PROFILER_end_time);\
            PROFILER_refresh_time_consumed(PROFILER_begin_time, PROFILER_end_time, PROFILER_instance_index);\
    }
.fi
.PP
Окончание работы/вызова локального профилировщика\&. Запоминается время окончания работы/вызова профилировщика\&. Это время, как и время начала работы/вызова профилировщика используется для обновления общего затраченного времени\&. Общее затраченное профилировщиком время используется системой профилировки для оценки загруженности профилируемой секции кода\&. 
.PP
См\&. определение в файле PROFILING_tools\&.h строка 225
.SH "Функции"
.PP 
.SS "int32_t \fBPROFILER_get_free_instance_index\fP ()"
.PP
Определяет индекс следующего свободного профилировщика\&. Когда профилировщик начинает свою работу впервые, система присваивает ему некоторый индекс, посредством которого с профилировщиком в дальнейшем выполняются все остальные манипуляции\&. 
.PP
\fBВозвращает:\fP
.RS 4
int32_t индекс следующего свободного профилировщика 
.RE
.PP

.PP
См\&. определение в файле PROFILING_tools\&.h строка 271
.SS "void \fBPROFILER_instance_init\fP (const char *file, const char *function, const int32_tline, const int32_tPROFILER_instance_index)"
.PP
Инициализирует экземпляр профилировщика\&. Когда профилировщик начинает свою работу впервые, система профилировки запоминает его положение в исходном коде\&. 
.PP
\fBАргументы:\fP
.RS 4
\fIconst\fP char *file 
.br
 Название файла, в котором работает профилировщик\&. 
.br
\fIconst\fP char *function 
.br
 Название функции, в которой работает профилировщик\&. 
.br
\fIconst\fP int32_t line 
.br
 Номер строки, в которой начинается выполнение профилировщика\&. Профилировщик измеряет время выполнения сегмента кода от этой строки до вызова PROFILIER_local_stop() 
.br
\fIconst\fP int32_t PROFILER_instance_index 
.br
 Индекс инициализируемого профилировщика\&. 
.RE
.PP

.PP
См\&. определение в файле PROFILING_tools\&.h строка 297
.SS "uint8_t \fBPROFILER_instance_is_not_initialized\fP (int32_tPROFILER_instance_index)"
.PP
Сообщает инициализирован ли профилировщик или нет\&. Возвращает 0, если профилировщик ещё не инициализирован (работает впервые)\&. Возвращает значение отличное от 0, если профилировщик уже не нуждается в инициализации (работает не в первые)\&. 
.PP
\fBАргументы:\fP
.RS 4
\fIint32_t\fP PROFILER_instance_index 
.br
 Индекс профилировщика\&. 
.RE
.PP
\fBВозвращает:\fP
.RS 4
.RE
.PP

.PP
См\&. определение в файле PROFILING_tools\&.h строка 314
.SS "void \fBPROFILER_refresh_times_called\fP (int32_tPROFILER_instance_index)"
.PP
Обновить общее число вызовов данного профилировщика\&. Общее число вызовов профилировщика даёт понять, сколько раз управление достигло секции, которую профилирует данный профилировщик\&. 
.PP
\fBАргументы:\fP
.RS 4
\fIint32_t\fP PROFILER_instance_index 
.br
 Индекс локального профилировщика\&. 
.RE
.PP

.PP
См\&. определение в файле PROFILING_tools\&.h строка 192
.SH "Переменные"
.PP 
.SS "int32_t \fBPROFILER_instance_last_index\fP"
.PP
Индекс последнего инициализированного профилировщика\&. Инициализирован значением PROFILER_INSTANCE_NOT_INITIALIZED, поскольку в начальный момент ни один профилировщик ещё не инициализирован\&. 
.PP
См\&. определение в файле PROFILING_tools\&.c строка 37
.SH "Автор"
.PP 
Автоматически создано Doxygen для EmbedPROFILER из исходного текста\&.
